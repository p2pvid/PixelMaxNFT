"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _plugin() {
  const data = require("@parcel/plugin");

  _plugin = function () {
    return data;
  };

  return data;
}

const CODE = `
var Refresh = require('react-refresh/runtime');

Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
  return function(type) {
    return type;
  };
};`;

var _default = new (_plugin().Runtime)({
  async apply({
    bundle,
    options
  }) {
    if (bundle.type !== 'js' || !options.hmrOptions || !bundle.env.isBrowser() || bundle.env.isWorker() || options.mode !== 'development') {
      return;
    }

    let entries = bundle.getEntryAssets();

    for (let entry of entries) {
      var _pkg$dependencies, _pkg$devDependencies, _pkg$peerDependencies;

      let pkg = await entry.getPackage();

      if (pkg !== null && pkg !== void 0 && (_pkg$dependencies = pkg.dependencies) !== null && _pkg$dependencies !== void 0 && _pkg$dependencies.react || pkg !== null && pkg !== void 0 && (_pkg$devDependencies = pkg.devDependencies) !== null && _pkg$devDependencies !== void 0 && _pkg$devDependencies.react || pkg !== null && pkg !== void 0 && (_pkg$peerDependencies = pkg.peerDependencies) !== null && _pkg$peerDependencies !== void 0 && _pkg$peerDependencies.react) {
        return {
          filePath: __filename,
          code: CODE,
          isEntry: true
        };
      }
    }
  }

});

exports.default = _default;