"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _plugin() {
  const data = require("@parcel/plugin");

  _plugin = function () {
    return data;
  };

  return data;
}

function _sharp() {
  const data = _interopRequireDefault(require("sharp"));

  _sharp = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// from https://github.com/lovell/sharp/blob/df7b8ba73808fc494be413e88cfb621b6279218c/lib/output.js#L6-L17
const FORMATS = new Map([['heic', 'heif'], ['heif', 'heif'], ['avif', 'avif'], ['jpeg', 'jpeg'], ['jpg', 'jpeg'], ['png', 'png'], ['raw', 'raw'], ['tiff', 'tiff'], ['webp', 'webp'], ['gif', 'gif']]);

var _default = new (_plugin().Transformer)({
  async transform({
    asset
  }) {
    asset.isIsolated = true;
    let width = asset.query.width ? parseInt(asset.query.width, 10) : null;
    let height = asset.query.height ? parseInt(asset.query.height, 10) : null;
    let quality = asset.query.quality ? parseInt(asset.query.quality, 10) : undefined;
    let format = asset.query.as ? asset.query.as.toLowerCase().trim() : null;

    if (width || height || quality || format) {
      let inputBuffer = await asset.getBuffer();
      let imagePipeline = (0, _sharp().default)(inputBuffer);

      if (width || height) {
        imagePipeline.resize(width, height);
      }

      if (format) {
        if (!FORMATS.has(format)) {
          throw new Error(`Sharp does not support ${format} images.`);
        }

        asset.type = format;
        imagePipeline[FORMATS.get(format)]({
          quality
        });
      }

      asset.setStream(imagePipeline);
    }

    return [asset];
  }

});

exports.default = _default;